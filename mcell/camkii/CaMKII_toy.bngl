begin model

begin parameters

    #Diffusion constants, relevant for importing inot MCell
    MCELL_DIFFUSION_CONSTANT_3D_Ca 2e-6
    MCELL_DIFFUSION_CONSTANT_3D_CaM 1.5e-7
    MCELL_DIFFUSION_CONSTANT_3D_CaMKII 1e-7
    MCELL_DIFFUSION_CONSTANT_3D_PP1 1.1e-7


    #Other constants for unit conversions
    NA = 6.022e23/1e6
    V 0.15121 * 1e-15#0.125e-15/8
    NA_V 6.022e23 * V
    VOL_RXN 1
    MCELL_REDEFINE_VOL_RXN NA_V
    ITERATIONS 5000000

    #Ca binding to CaM rate constants
    k_on1C = 4/(NA*V) * VOL_RXN #1/uM 1/s
	k_off1C = 40.24 #1/s
	k_on2C = 10/(NA*V) * VOL_RXN #1/uM 1/s
	k_off2C = 9.3 #1/s
	k_on1N = 100/(NA*V) * VOL_RXN #1/uM 1/s
	k_off1N = 2660 #1/s
	k_on2N = 150/(NA*V) * VOL_RXN #1/uM 1/s
	k_off2N = 990 #1/s

    #CaM binding to CaMKII rate constants
    k_onCaM0 = (3.8/(NA*V))/1000 * VOL_RXN #1/uM 1/s
	k_offCaM0 = 6.56 #1/s
	k_onCaM1C = (59/(NA*V))/1000 * VOL_RXN #1/uM 1/s
	k_offCaM1C = 6.72 #1/s 
	k_onCaM2C = 0.92/(NA*V) * VOL_RXN #1/uM 1/s  
	k_offCaM2C = 6.35 #1/s
	k_onCaM1C1N = 0.33/(NA*V) * VOL_RXN #1/uM 1/s 
	k_offCaM1C1N = 5.68 #1/s
	k_onCaM2C1N = 5.2/(NA*V) * VOL_RXN #1/uM 1/s
	k_offCaM2C1N = 5.25 #1/s	
	k_onCaM1N = (22/(NA*V))/1000 * VOL_RXN #1/uM 1/s
	k_offCaM1N = 5.75 #1/s
	k_onCaM2N = 0.1/(NA*V) * VOL_RXN #1/uM 1/s
	k_offCaM2N = 1.68 #1/s
	k_onCaM1C2N = 1.9/(NA*V) * VOL_RXN #1/uM 1/s
	k_offCaM1C2N = 2.09 #1/s
	k_onCaM4 = 30/(NA*V) * VOL_RXN #1/uM 1/s
	k_offCaM4 = 1.95 #1/s

    # Phosphorylation constants
    # k_pCaM0 = 0 #1/s
	# k_pCaM1C = 0.032 #1/s
	# k_pCaM2C = 0.064 #1/s
	# k_pCaM1C1N = 0.094 #1/s
	# k_pCaM2C1N = 0.124 #1/s 
	# k_pCaM1N = 0.06 #1/s
	# k_pCaM2N = 0.12 #1/s
	# k_pCaM1C2N = 0.154 #1/s
	k_pCaM4 = 0.96 #1/s

    k_cat = 10
    K_m = 11*(NA*V)/VOL_RXN #uM 
  
  	k_f = 10/(NA*V) * VOL_RXN #1/uM 1/s	
  	k_r = K_m*k_f-k_cat #1/s
end parameters

begin molecule types
    Ca()
    CaM(C~0~1~2,N~0~1~2,ng,camkii)
    CaMKII(r,l,T286~0~P,cam,pp1)
    PP1(camkii)
end molecule types



begin species
    Ca() 10*NA*V #uM
    CaM(C~0,N~0,ng,camkii) 30*NA*V #uM
    CaMKII(r!1,l!3,T286~0,cam,pp1).CaMKII(r!2,l!1,T286~0,cam,pp1).CaMKII(r!3,l!2,T286~0,cam,pp1) 80*NA*V/3 #uM
    PP1(camkii) 1.25*NA*V #uM
end species

begin observables
    Molecules Ca Ca()
    #some CaM species
    Molecules CaM2C CaM(C~2,N~0,camkii)
    Molecules CaM2N CaM(C~0,N~2,camkii)
    Molecules Cam4Ca CaM(C~2,N~2,camkii)
    #some CaMKII species
    Molecules pCaMKII CaMKII(T286~P,cam)
    Molecules pKCaM CaMKII(T286~P,cam!1).CaM(camkii!1)
    Molecules pCaMKII_tot CaMKII(T286~P)
    Molecules KCaMKII_tot CaMKII(cam!1).CaM(camkii!1)
end observables



begin reaction rules
  #CaM binding Ca
  CaM(C~0,ng,camkii) + Ca <-> CaM(C~1,ng,camkii) k_on1C,k_off1C
  CaM(C~1,ng,camkii) + Ca <-> CaM(C~2,ng,camkii) k_on2C,k_off2C
  CaM(N~0,ng,camkii) + Ca <-> CaM(N~1,ng,camkii) k_on1N,k_off1N
  CaM(N~1,ng,camkii) + Ca <-> CaM(N~2,ng,camkii) k_on2N,k_off2N
  #CaMKII binding to CaM, ignore phosphorylation state
  CaMKII(cam) + CaM(C~0,N~0,ng,camkii) <-> CaMKII(cam!1).CaM(C~0,N~0,ng,camkii!1) k_onCaM0,k_offCaM0
  CaMKII(cam) + CaM(C~1,N~0,camkii) <-> CaMKII(cam!1).CaM(C~1,N~0,camkii!1) k_onCaM1C,k_offCaM1C
  CaMKII(cam) + CaM(C~2,N~0,camkii) <-> CaMKII(cam!1).CaM(C~2,N~0,camkii!1) k_onCaM2C,k_offCaM2C
  CaMKII(cam) + CaM(C~0,N~1,camkii) <-> CaMKII(cam!1).CaM(C~0,N~1,camkii!1) k_onCaM1N,k_offCaM1N
  CaMKII(cam) + CaM(C~1,N~1,camkii) <-> CaMKII(cam!1).CaM(C~1,N~1,camkii!1) k_onCaM1C1N,k_offCaM1C1N
  CaMKII(cam) + CaM(C~2,N~1,camkii) <-> CaMKII(cam!1).CaM(C~2,N~1,camkii!1) k_onCaM2C1N,k_offCaM2C1N
  CaMKII(cam) + CaM(C~0,N~2,camkii) <-> CaMKII(cam!1).CaM(C~0,N~2,camkii!1) k_onCaM2N,k_offCaM2N
  CaMKII(cam) + CaM(C~1,N~2,camkii) <-> CaMKII(cam!1).CaM(C~1,N~2,camkii!1) k_onCaM1C2N,k_offCaM1C2N
  CaMKII(cam) + CaM(C~2,N~2,camkii) <-> CaMKII(cam!1).CaM(C~2,N~2,camkii!1) k_onCaM4,k_offCaM4


  CaMKII(l!1,T286~0,cam!2).CaM(C~2,N~2,camkii!2).CaMKII(r!1,cam!+) -> CaMKII(l!1,T286~P,cam!2).CaM(C~2,N~2,camkii!2).CaMKII(r!1,cam!+) k_pCaM4
  CaMKII(l!1,T286~0,cam!2).CaM(C~2,N~2,camkii!2).CaMKII(r!1,T286~P) -> CaMKII(l!1,T286~P,cam!2).CaM(C~2,N~2,camkii!2).CaMKII(r!1,T286~P) k_pCaM4

#  CaMKII(Y286~P) + PP1 -> CaMKII(Y286~0) + PP1 MM(k_cat,K_m)

  # CaMKII(T286~P,pp1) + PP1(camkii) <-> CaMKII(T286~P,pp1!1).PP1(camkii!1) k_f,k_r
  # CaMKII(T286~P,pp1!1).PP1(camkii!1) -> CaMKII(T286~0,pp1) + PP1(camkii) k_cat
end reaction rules

end model

simulate({method=>"nf",seed=>1,t_end=>10,n_steps=>10000})
